"""
MongoDB resumes Ïª¨Î†âÏÖò Îç∞Ïù¥ÌÑ∞ ÌôïÏù∏ Ïä§ÌÅ¨Î¶ΩÌä∏
"""

import os
import sys
from pymongo import MongoClient
from dotenv import load_dotenv

# ÌôòÍ≤Ω Î≥ÄÏàò Î°úÎìú
load_dotenv()

# MongoDB Ïó∞Í≤∞
MONGO_URI = os.getenv("MONGO_URI", "mongodb://localhost:27017/")
DB_NAME = "hireme"
COLLECTION_NAME = "resumes"

def check_resumes_collection():
    """resumes Ïª¨Î†âÏÖòÏùò Îç∞Ïù¥ÌÑ∞Î•º ÌôïÏù∏"""
    try:
        # MongoDB Ïó∞Í≤∞
        client = MongoClient(MONGO_URI)
        db = client[DB_NAME]
        collection = db[COLLECTION_NAME]
        
        print(f"üìä MongoDB Ïó∞Í≤∞ ÏÑ±Í≥µ: {MONGO_URI}")
        print(f"üìÅ Îç∞Ïù¥ÌÑ∞Î≤†Ïù¥Ïä§: {DB_NAME}")
        print(f"üìã Ïª¨Î†âÏÖò: {COLLECTION_NAME}")
        
        # Ïª¨Î†âÏÖò Ï°¥Ïû¨ Ïó¨Î∂Ä ÌôïÏù∏
        if COLLECTION_NAME not in db.list_collection_names():
            print(f"‚ùå {COLLECTION_NAME} Ïª¨Î†âÏÖòÏù¥ Ï°¥Ïû¨ÌïòÏßÄ ÏïäÏäµÎãàÎã§.")
            return
        
        # Ï†ÑÏ≤¥ Î¨∏ÏÑú Ïàò ÌôïÏù∏
        total_count = collection.count_documents({})
        print(f"üìä Ï†ÑÏ≤¥ Î¨∏ÏÑú Ïàò: {total_count}")
        
        if total_count == 0:
            print("üìù Ïª¨Î†âÏÖòÏóê Îç∞Ïù¥ÌÑ∞Í∞Ä ÏóÜÏäµÎãàÎã§.")
            return
        
        # Î™®Îì† Î¨∏ÏÑú Ï°∞Ìöå
        documents = list(collection.find({}))
        
        print(f"\nüîç Î∞úÍ≤¨Îêú ÏßÄÏõêÏûê Ï†ïÎ≥¥ ({total_count}Î™Ö):")
        print("=" * 80)
        
        for i, doc in enumerate(documents, 1):
            print(f"\nüë§ ÏßÄÏõêÏûê {i}:")
            print(f"   ID: {doc.get('_id', 'N/A')}")
            print(f"   Ïù¥Î¶Ñ: {doc.get('applicant_name', 'N/A')}")
            print(f"   ÏßÅÎ¨¥: {doc.get('position', 'N/A')}")
            print(f"   Î∂ÄÏÑú: {doc.get('department', 'N/A')}")
            print(f"   Í≤ΩÎ†•: {doc.get('experience', 'N/A')}")
            print(f"   Îì±Î°ùÏùº: {doc.get('created_at', 'N/A')}")
            
            # Î∂ÑÏÑù Í≤∞Í≥ºÍ∞Ä ÏûàÎäî Í≤ΩÏö∞
            if 'analysis_result' in doc:
                analysis = doc['analysis_result']
                if isinstance(analysis, dict):
                    overall_score = analysis.get('overall_score', 'N/A')
                    print(f"   Ï†ÑÏ≤¥ Ï†êÏàò: {overall_score}")
                    
                    # ÏÑ∏Î∂Ä Ï†êÏàòÎì§
                    if 'analysis' in analysis:
                        scores = analysis['analysis']
                        for key, value in scores.items():
                            if 'score' in key:
                                print(f"   {key}: {value}")
        
        print("\n" + "=" * 80)
        
        # Ïª¨Î†âÏÖò Ïä§ÌÇ§Îßà ÌôïÏù∏
        print("\nüìã Ïª¨Î†âÏÖò Ïä§ÌÇ§Îßà:")
        if documents:
            sample_doc = documents[0]
            for key, value in sample_doc.items():
                value_type = type(value).__name__
                if isinstance(value, str) and len(value) > 50:
                    value_preview = value[:50] + "..."
                else:
                    value_preview = str(value)
                print(f"   {key}: {value_type} = {value_preview}")
        
    except Exception as e:
        print(f"‚ùå Ïò§Î•ò Î∞úÏÉù: {e}")
        import traceback
        traceback.print_exc()
    
    finally:
        if 'client' in locals():
            client.close()

if __name__ == "__main__":
    check_resumes_collection()
